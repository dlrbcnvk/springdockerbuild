# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  #Gradle Build
  gradle-build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # JAVA 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Spring Boot Application Build
      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test

      # Docker image build
      - name: docker image build
        run: docker build -t springdocker .

      # DockerHub Login
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Docker Hub push
      - name: docker Hub push
        run: |
          docker tag springdocker dlrbcnvk/springdocker:${GITHUB_SHA::7} 
          docker push dlrbcnvk/springdocker:${GITHUB_SHA::7}

      # ec2 에 배포
      - name: Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ec2-3-35-53-99.ap-northeast-2.compute.amazonaws.com
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            sudo su
            docker run hello-world
            docker rm -f $(docker ps -qa)
            exit
            sudo docker pull dlrbcnvk/springdocker:${GITHUB_SHA::7}
            sudo docker tag dlrbcnvk/springdocker:${GITHUB_SHA::7} springdocker
            sudo docker run -d --rm --name springdocker -p 80:8080 springdocker
             


